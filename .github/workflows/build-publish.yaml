#
# Copyright (c) 2020 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#

name: Build and push container

on:
  push:
    branches:
      - 'master'
env:
  IMAGE_NAME: quay.io/eclipse/che-custom-nodejs-deasync
  CACHE_IMAGE_NAME: chedockerfiles/custom-nodejs-deasync-cache

jobs:
  pre-compiler:
    strategy:
      matrix:
        platform: ['linux/amd64']
    runs-on: ubuntu-latest
    steps:
    - name: Clone source code
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Docker login
      run: |
        docker login -u ${{ secrets.CACHE_USERNAME }} -p ${{ secrets.CACHE_PASSWORD }}
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} quay.io
    - name: Docker Buildx
      uses: crazy-max/ghaction-docker-buildx@v1.5.0
      with:
        version: v0.4.1
    - name: Docker build, tag, and push
      run: |
        IMAGE_VERSION=$(cat VERSION)
        PLATFORM=$(echo ${{matrix.platform}} | tr '\/' '-') 
        IMAGE_WITH_TAG="${IMAGE_NAME}:${IMAGE_VERSION}-${PLATFORM}-precompiler"
        CACHE_IMAGE_TAG="${CACHE_IMAGE_NAME}:${IMAGE_VERSION}-${PLATFORM}-precompiler-cache"
        echo "Building ${IMAGE_WITH_TAG} on platform ${{matrix.platform}}"
        docker buildx build --cache-from="type=registry,ref=${CACHE_IMAGE_TAG}" --cache-to="type=registry,ref=${CACHE_IMAGE_TAG},mode=max" --platform "${{matrix.platform}}" -t "${IMAGE_WITH_TAG}" --target precompiler --push .
  compiler:
    needs: pre-compiler
    strategy:
      matrix:
        platform: ['linux/amd64']
    runs-on: ubuntu-latest
    steps:
    - name: Clone source code
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Docker login
      run: |
        docker login -u ${{ secrets.CACHE_USERNAME }} -p ${{ secrets.CACHE_PASSWORD }}
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} quay.io
    - name: Docker Buildx
      uses: crazy-max/ghaction-docker-buildx@v1.5.0
      with:
        version: v0.4.1
    - name: Docker build, tag, and push
      run: |
        IMAGE_VERSION=$(cat VERSION)
        PLATFORM=$(echo ${{matrix.platform}} | tr '\/' '-') 
        IMAGE_WITH_TAG="${IMAGE_NAME}:${IMAGE_VERSION}-${PLATFORM}"
        PRECOMPILER_CACHE_IMAGE_TAG="${CACHE_IMAGE_NAME}:${IMAGE_VERSION}-${PLATFORM}-precompiler-cache"
        echo "Building ${IMAGE_WITH_TAG} on platform ${{matrix.platform}}"
        docker buildx build --cache-from="type=registry,ref=${PRECOMPILER_CACHE_IMAGE_TAG}" --platform "${{matrix.platform}}" -t "${IMAGE_WITH_TAG}" --push .
  assemble:
    needs: compiler
    strategy:
      matrix:
        platform: ['linux/amd64']
    runs-on: ubuntu-latest
    steps:
    - name: Clone source code
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - name: Docker login
      run: |
        docker login -u ${{ secrets.CACHE_USERNAME }} -p ${{ secrets.CACHE_PASSWORD }}
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} quay.io
    - name: Docker Buildx
      uses: crazy-max/ghaction-docker-buildx@v1.5.0
      with:
        version: v0.4.1
    - name: Create multi-arch image
      run: |
        IMAGE_VERSION=$(cat VERSION)
        PLATFORM=$(echo ${{matrix.platform}} | tr '\/' '-') 
        IMAGE_WITH_TAG="${IMAGE_NAME}:${IMAGE_VERSION}-${PLATFORM}-multi-test"
        echo "Creating manifest for multi-arch build "
        docker manifest create ${IMAGE_WITH_TAG} \
        ${IMAGE_NAME}:${IMAGE_VERSION}-linux-arm64 \
        ${IMAGE_NAME}:${IMAGE_VERSION}-linux-ppc64le \
        ${IMAGE_NAME}:${IMAGE_VERSION}-linux-s390x \
        ${IMAGE_NAME}:${IMAGE_VERSION}-linux-amd64
        docker manifest push ${IMAGE_WITH_TAG}
                                